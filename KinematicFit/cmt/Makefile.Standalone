# ==========================================
# KinematicFit Standalone Makefile
#
# @author Manuel Proissl <mproissl@cern.ch>
# @date   27/02/2013
# ==========================================

ifeq ($(wildcard $(ROOTSYS)/test/Makefile.arch),) 
    include $(ROOTSYS)/etc/Makefile.arch 
else
    include $(ROOTSYS)/test/Makefile.arch 
endif

ROOTBIN := $(shell root-config --bindir)
ROOTLIB := $(shell root-config --libdir)
ROOTINC := $(shell root-config --incdir)

# -------------------------------------------------------------
# General flags
# -------------------------------------------------------------
PACKAGE    = KinematicFit
OUTPUTDIR  = ../StandAlone

# From Makefile.arch above:
# CXX         = gcc
# CXXFLAGS    = ...
# LDFLAGS     = ...

CXXFLAGS += -DKINEMATICFIT_STANDALONE
CXXFLAGS += -DROOTCORE

INCLUDES   += -I.. -I${ROOTINC}

LINKLIBS = -L${ROOTSYS}/lib -pthread -lm -ldl -rdynamic

# -------------------------------------------------------------
# ROOT Cint
# -------------------------------------------------------------
CINT       = KinematicFitCint
LDEFFILE   = ../Root/LinkDef.h
CINTFILE   = $(OUTPUTDIR)/KinematicFitCint.cxx
CINTOBJ    = $(patsubst %.cxx,%.o,$(CINTFILE))

# -------------------------------------------------------------
# Source
# -------------------------------------------------------------
CXXLIST = $(wildcard ../Root/*.cxx) $(CINTFILE)
HLIST   = $(wildcard ../KinematicFit/*.h)
OLIST   = $(patsubst %.cxx,%.o,$(CXXLIST))
DLIST   = $(patsubst %.h,%.d,$(HLIST))

# -------------------------------------------------------------
# Libraries
# -------------------------------------------------------------
LIBFILE  = $(OUTPUTDIR)/libKinematicFit.so

ifeq ($(PLATFORM),macosx)
EXTRALDFLAGS = -install_name $(LIBFILE)
endif

# get libraries of ROOT
define ldlinksuffixROOT
   $(addsuffix $(LDLINKSUFFIX),$(Lib)) $(shell if [ "$(findstring -Ldlink2,$(OPTIONS))" ]; then echo $(addsuffix _pkgid_$(ROOTVER),$(Lib)); fi)
endef

# -------------------------------------------------------------
# Compilation
# -------------------------------------------------------------
default: shlib

# Implicit rule to compile all classes
%.o : %.cxx
	@echo "Compiling $<"
	@$(CXX) -MD $(CXXFLAGS) $(INCLUDES) -c $< -o $*.o 

# Rule to make ROOTCINT output file
$(CINTOBJ) : $(HLIST) $(LDEFFILE)
	@mkdir -p $(OUTPUTDIR)
	@echo "Running rootcint"
	@$(ROOTBIN)/rootcint -f $(CINTFILE) -c -p  $(CXXFLAGS) $(INCLUDES) $(HLIST) $(LDEFFILE)
	@echo "Compiling $(CINTFILE)"
	@$(CXX) $(CXXFLAGS) $(INCLUDES) -c $(CINTFILE) -o $@

rootcint : $(HLIST) $(LDEFFILE)
	@echo "Running rootcint"
	$(ROOTBIN)/rootcint -f $(CINTFILE) -c -p  $(CXXFLAGS) $(INCLUDES) $(HLIST) $(LDEFFILE)

# Rule to combine objects into a shared library
$(LIBFILE): $(OLIST)
	@echo "Linking $(LIBFILE)"
	@rm -f $(LIBFILE)
	@$(LD) $(CXXFLAGS) $(SOFLAGS) $(LINKLIBS) $(EXTRALDFLAGS) $(OLIST) -o $(LIBFILE) 

-include $(DLIST)

KinematicFitCint: $(CINTOBJ)
shlib: $(LIBFILE)

clean:
	@rm -f ../*/*.o ../*/*.d
	@rm -rf $(OUTPUTDIR)

